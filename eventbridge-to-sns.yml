AWSTemplateFormatVersion: 2010-09-09
Description: EventBridge Rule and SNS topic template

Resources:
  # definition of sns topic
  MySNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: MyNotificationTopic

  SnsStateMachine:
    Type: "AWS::StepFunctions::StateMachine"
    Properties:
      StateMachineName: SnsStateMachine
      DefinitionString: !Sub |-
            {
              "StartAt": "PublishSns",
              "States": {
                "PublishSns": {
                  "Type": "Task",
                  "Resource": "arn:aws:states:::sns:publish",
                  "Parameters": {
                    "TopicArn": "${MySNSTopic}",
                    "Message.$": "$.message",
                    "Subject.$": "$.subject"
                  },
                  "End": true
                }
              }
            }
      RoleArn: !GetAtt PublishRole.Arn

  # EventBridge Rule
  MyEventBridgeRule:
    Type: AWS::Events::Rule
    Properties:
      Name: MyCustomRule
      Description: "Rules to detect custom events"
      EventPattern: |
        {
          "source": ["aws.cloudwatch"],
          "detail-type": ["CloudWatch Alarm State Change"],
          "detail": {
            "alarmName": [
              {"prefix": "dev-test-"},
              {"prefix": "stg-test-"}
            ],
            "state": {
              "value": ["ALARM"]
            }
          }
        }
      State: ENABLED
      Targets:
        - Arn: !Ref SnsStateMachine
          Id: step-function
          RoleArn: !GetAtt StateMachineExecuteRole.Arn
          InputTransformer:
            InputPathsMap:
              "Account": "$.account"
              "AlarmName": "$.detail.alarmName"
              "Reason": "$.detail.state.reason"
              "State": "$.detail.state.value"
            InputTemplate: |
              {
                "subject": "<State>: <AlarmName>",
                "message": "AWSアカウントID: \"<Account>\" \n発生アラーム名: \"<AlarmName>\" \n理由: \"<Reason>\""
              }

  # action policy of sns
  TopicInlinePolicy:
    Type: AWS::SNS::TopicInlinePolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: "*"
            Action:
              - "SNS:GetTopicAttributes"
              - "SNS:SetTopicAttributes"
              - "SNS:AddPermission"
              - "SNS:RemovePermission"
              - "SNS:DeleteTopic"
              - "SNS:Subscribe"
              - "SNS:ListSubscriptionsByTopic"
              - "SNS:Publish"
            Resource: !Sub "arn:aws:sns:ap-northeast-1:${AWS::AccountId}:${MySNSTopic}"
            Condition:
              StringEquals:
                "AWS:SourceOwner": !Sub ${AWS::AccountId}
          - Sid: AllowPublishFromSpecificEventBridge
            Effect: Allow
            Principal:
              Service: "events.amazonaws.com"
            Action: sns:Publish
            Resource: !Ref MySNSTopic
      TopicArn: !Ref MySNSTopic

  PublishRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: sns-publish-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - states.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: SnsPublish
          PolicyDocument:
            Statement:
              - Effect: Allow
                Resource:
                  - !Ref MySNSTopic
                Action:
                  - sns:Publish

  StateMachineExecuteRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: state-machine-execution-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - events.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: StateMachineExecution
          PolicyDocument:
            Statement:
              - Effect: Allow
                Resource:
                  - !Ref SnsStateMachine
                Action:
                  - states:StartExecution
